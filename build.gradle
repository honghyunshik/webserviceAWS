buildscript {

    //ext란 build.gradle에서 사용하는 전역변수를 설정하겠다는 의미이다.
    ext{
        springBootVersion = '2.1.7.RELEASE'     //springBootVersion이라는 전역변수 생성
    }

    //의존성(라이브러리)들을 어떤 원격 저장소에서 받을지
    repositories {
        mavenCentral()
        jcenter()       //업로드가 더 편함
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }

}


//필수인 4개 플러그인들
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'     //스프링 부트의 의존성을 관리하는 플러그인

group 'org.example'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    compileOnly 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')     //스프링부트용 Spring Data Jpa 추상화 라이브러리
                                                                                //스프링부트 버전에 맞춰 자동으로 JPA관련 라이브러리들의 버전을 관리
    implementation('com.h2database:h2')     //인메모리 관계형 데이터베이스, 메모리에서 실행되기 때문에 애플리케이션을 재시작할때마다 초기화되므로 테스트에서 주로 사용
}

test {
    useJUnitPlatform()
}